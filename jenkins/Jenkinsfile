pipeline{
    agent any
    environment {
        PATH = "$PATH:/usr/share/maven"
    }
    stages{
       stage('image_build'){
            steps{
                sh '''
                    echo "buildinng image"
                    docker image build -t image6 ${WORKSPACE}/docker
                    '''
            }
        }
        stage('Build'){
            steps{
                sh 'mvn clean package'
            }
        }
        stage('SonarQube analysis') {
            steps{
                withSonarQubeEnv('sonarqube-server'){
                sh 'mvn clean install sonar:sonar -Dsonar.projectKey=project1'
                }
            }
        }
        stage('OwASP_SCAN'){
            steps{
                dependencyCheck addiionalArguements:' --scan ./ ', odcInstallation: 'DP-check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }

        stage('image_tagging'){
            steps{
                sh '''
                    echo "taggig image"
                    docker image tag image6:latest ranjana000/image6:latest
                    '''
            }
        }
        stage('image_push'){
            steps{
                sh '''
                    docker login -u ranjana000 -p shrinidhi@1
                    docker image push ranjana000/image6:latest
                    '''
            }
        }
        stage('deploy'){
             steps{
                sh '''
                    echo "creating container..."
                    docker container run -d --name container11 ranjana000/image6:latest bash
                    '''
            }
        }
    }

}

