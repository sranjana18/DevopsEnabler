pipeline{
    agent any 
    stages{
        stage ('Code build and Static Code Analysis'){
                image 'maven'
                args '-v $HOME/.m2:/root/.m2'
            
        
             steps {
                 script {
                     withSonarQubeEnv('sonarqube-9.0') {
                         sh "mvn sonar:sonar"
                     }
                     timeout(time: 1, unit: 'HOURS') {
                         def qg = waitForQualityGate()
                         if (qg.status != 'OK') {
                             error "Pipeline aborted due to quality gate failure: ${qg.status}"
                         }
                     }
                     sh "mvn clean install"
                 }
             }
        }

        stage('image_build'){
            steps{
                sh '''
                    echo "buildinng image"
                    docker image build -t pipimg ${WORKSPACE}/docker
                    '''
            }
        }
        stage('image_tagging'){
            steps{
                sh '''
                    echo "taggig image"
                    docker image tag pipimg:latest ranjana000/pipimg:latest
                    '''
            }
        }
        stage('image_push'){
            steps{
                sh '''
                    docker login -u ranjana000 -p shrinidhi@1
                    docker image push ranjana000/pipimg:latest
                    '''
            }
        }
        stage('deploy'){
            steps{
                sh '''
                    echo "creating container..."
                    docker container run -d --name container1 ranjana000/pipimg:latest bash
                    '''
            }
        }
    }
}
